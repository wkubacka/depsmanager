basePath: /api
definitions:
  depsmanager.Dependency:
    properties:
      name:
        type: string
      score:
        type: number
      updated_at:
        type: integer
    type: object
  depsmanager.GetDependenciesByScore:
    properties:
      score:
        type: number
    type: object
  depsmanager.GetProjectNameByDepNameReq:
    properties:
      dependency_name:
        type: string
    type: object
  depsmanager.ListDependenciesResponse:
    properties:
      dependencies:
        items:
          $ref: '#/definitions/depsmanager.Dependency'
        type: array
      project_name:
        type: string
    type: object
  depsmanager.Project:
    properties:
      name:
        type: string
      updated_at:
        type: integer
      version:
        type: string
    type: object
  depsmanager.ProjectRequest:
    properties:
      project_name:
        type: string
      version:
        type: string
    type: object
info:
  contact: {}
  title: DepsManager
  version: 1.0.0
paths:
  /v1/dependencies:
    post:
      consumes:
      - application/json
      description: List dependencies by project name and version.
      parameters:
      - description: request body
        in: body
        name: r.body
        required: true
        schema:
          $ref: '#/definitions/depsmanager.ProjectRequest'
      responses:
        "200":
          description: project dependencies
          schema:
            $ref: '#/definitions/depsmanager.ListDependenciesResponse'
        "400":
          description: cannot decode request / body.ProjectName is required / body.Version
            is required
        "404":
          description: not found project
        "500":
          description: internal error
      summary: ListDependencies
      tags:
      - dependencies
  /v1/dependencies/byprojectname:
    get:
      consumes:
      - application/json
      description: List projects by dependency name.
      parameters:
      - description: request body
        in: body
        name: r.body
        required: true
        schema:
          $ref: '#/definitions/depsmanager.GetProjectNameByDepNameReq'
      responses:
        "200":
          description: related projects
          schema:
            items:
              $ref: '#/definitions/depsmanager.Project'
            type: array
        "400":
          description: cannot decode body / empty dependency name
        "404":
          description: not found project
        "500":
          description: internal error
      summary: ProjectByDependency
      tags:
      - dependencies
  /v1/dependencies/byscore:
    get:
      consumes:
      - application/json
      description: Get dependencies by score.
      parameters:
      - description: request body
        in: body
        name: r.body
        required: true
        schema:
          $ref: '#/definitions/depsmanager.GetDependenciesByScore'
      responses:
        "200":
          description: versions
          schema:
            items:
              type: string
            type: array
        "400":
          description: cannot decode body
        "404":
          description: not found project
        "500":
          description: internal error
      summary: DependenciesByScore
      tags:
      - dependencies
  /v1/projects:
    delete:
      consumes:
      - application/json
      description: Delete project and all required dependencies.
      parameters:
      - description: request body
        in: body
        name: r.body
        required: true
        schema:
          $ref: '#/definitions/depsmanager.ProjectRequest'
      responses:
        "204":
          description: deleted successfully
        "400":
          description: cannot decode request / body.ProjectName is required / body.Version
            is required
        "404":
          description: not found project
        "500":
          description: internal error
      summary: DeleteProject
      tags:
      - projects
    get:
      description: List all projects stored in the database. To add a project with
        dependencies, use FetchProject.
      responses:
        "200":
          description: projects
          schema:
            items:
              $ref: '#/definitions/depsmanager.Project'
            type: array
        "500":
          description: internal error
      summary: ListProjects
      tags:
      - projects
    post:
      consumes:
      - application/json
      description: |-
        Fetch dependencies from deps client for projectName and store them in database.
        If projectName already exists, update dependencies.
      parameters:
      - description: request body
        in: body
        name: r.body
        required: true
        schema:
          $ref: '#/definitions/depsmanager.ProjectRequest'
      responses:
        "201":
          description: fetched successfully
        "400":
          description: cannot decode request / body.ProjectName is required / body.Version
            is required
        "404":
          description: not found project
        "500":
          description: internal error
      summary: FetchProject
      tags:
      - projects
  /v1/projects/versions:
    get:
      description: List all versions of project, by using deps.dev API.
      parameters:
      - description: project name
        in: query
        name: project_name
        required: true
        type: string
      responses:
        "200":
          description: versions
          schema:
            items:
              type: string
            type: array
        "404":
          description: not found project
        "500":
          description: internal error
      summary: ProjectVersions
      tags:
      - projects
swagger: "2.0"
